
/*CLONAR TABLA CON UNA CONSULTA*/

SELECT * INTO newCategories
FROM(SELECT CategoryID, CategoryName, Description
	FROM dbo.Categories
	WHERE CategoryID >5) AS RES;
	
SELECT * 
FROM newCategories

/* BASADO EN LA DIAPOSITIVA NRO 86
DEBE ACTUALIZAR EL NOMBRE DE LA CATEGORIA
EN LA TABLE NEWCATEGORIES BASADOS EN LA SIGUIENTE CONSULTA
OBTENER EL ID DE LA CATEGORÍA SOLO PARA AQUELLA CATEGORIAS
DONDE EL NOMBRE DE LA CATEGORIA SEA SEAFOOD*/

UPDATE newCategories SET CategoryName = 'COMIDA DE MAR'
WHERE CategoryID IN (SELECT CategoryID
	);

SELECT * 
FROM newCategories

/*BASADOS EN LA DIAPOSITIVA 88 REALICE
OBTENER UN LISTADO CON EL ID DE LA CATEGORIA 
DONDE EL ID SEA IGUAL O SUPERIOR A 7
LA RESULTANTE DE ESTA CONSULTA SERA LA BASE PARA
ELIMINAR LOS REGISTROS QUE COINCIDAN CON LA TABLA 
NEWCATEGORIES*/

DELETE FROM newCategories
WHERE CategoryID IN
(SELECT CategoryID
FROM dbo.Categories
	WHERE CategoryID >= 7);
GO

SELECT * 
FROM newCategories

/*ELIMINAR TODOS LOS DATOS DE LA TABLA
MUCHO CUIDADO*/

DELETE FROM newCategories
WHERE 1 = 1;

TRUNCATE TABLE newCategories;
GO

/*BASADOS EN LA DIAPOSISTIVA 91 REALICE
OBTENER UN LISTADO CON EL ID DE LA REGION Y
LA DESCRIPCION DE LA REGION, SOLO PARA AQUELLOS 
EMPLEADOS CUYO CARGO SEA REPRESENTANTE DE VENTAS*/


CREATE VIEW VW_EMPLEADO_REGION 
AS
SELECT REG.*
FROM (SELECT DISTINCT TER.RegionID
	FROM(SELECT ET.TerritoryID
		FROM (SELECT EmployeeID
			FROM dbo.Employees
			WHERE Title = 'Sales Representative') AS EMP
		INNER JOIN dbo.EmployeeTerritories AS ET
		ON EMP.EmployeeID = ET.EmployeeID) AS ET1
	INNER JOIN dbo.Territories AS TER
	ON ET1.TerritoryID = TER.TerritoryID) AS TER1
INNER JOIN dbo.Region AS REG
ON TER1.RegionID = REG.RegionID;


SELECT *
 FROM dbo.VW_EMPLEADO_REGION
 WHERE RegionID = 2;
 
 