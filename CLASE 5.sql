CREATE DATABASE BdeD6B;

use BdeD6B;


/*Crear una tabla con los siguientes atributos: código empleado, primary key autoincrementado, nombres varchar de 30 con el valor por defecto de juliana, 
apellidos un varchar de 50 no puede ser nulo, dirección que sea unique, teléfono unique, sexo bit, fecha de nacimiento datetime.*/

CREATE TABLE Tbl_Empl(
			COD_Empl INT IDENTITY (1,1),
			NOM_Empl VARCHAR (30) DEFAULT 'juliana',
			APELL_Empl VARCHAR(50) NOT NULL,
			DIR_Empl VARCHAR (50),
			TEL_Empl VARCHAR (7),
			SEX_Empl BIT,
			FECH_NAC_Empl DATETIME NOT NULL,
			SALARIO INT CHECK (SALARIO > 699999 AND SALARIO < 3000001),
			CONSTRAINT PK_COD_Empl PRIMARY KEY (COD_Empl),
			CONSTRAINT UQ_DIR_Empl UNIQUE (TEL_Empl)
			);

SELECT * FROM Tbl_Empl

CREATE TABLE Tbl_HORA_T (
			ID_HORA_T INT IDENTITY (1,1),
			COD_Empl INT NOT NULL,
			ID_THT TINYINT NOT NULL,
			CANTIDAD TINYINT NOT NULL,
			CONSTRAINT PK_ID_HORA_T PRIMARY KEY (ID_HORA_T),
			CONSTRAINT FK_COD_Empl FOREIGN KEY (COD_Empl) REFERENCES Tbl_Empl,
			CONSTRAINT FK_TIPO_HORA_T FOREIGN KEY (ID_THT) REFERENCES Tbl_TIPO_HORA_T
			);
			
SELECT * FROM Tbl_HORA_T 

CREATE TABLE Tbl_TIPO_HORA_T (
			ID_THT TINYINT IDENTITY (1,1),
			NOMBRE_THT VARCHAR (20) NOT NULL,
			PORCENTAJE_THT DECIMAL (4,2) NOT NULL,
			CONSTRAINT PK_ID_THT PRIMARY KEY (ID_THT)
			);
			
SELECT * FROM Tbl_TIPO_HORA_T 	



CREATE TABLE Tbl_LIBROS (
			ID_LIBRO TINYINT IDENTITY (1,1),
			TITULO VARCHAR (70) NOT NULL,
			FECH_LANZA DATETIME NOT NULL,
			AUTOR VARCHAR (50) NOT NULL,
			CATEGORIA VARCHAR (30) NOT NULL,
			EDITORIAL VARCHAR (30) NOT NULL,
			IDIOMA VARCHAR (20),
			PAGINAS INT 
			CONSTRAINT PK_ID_LIBRO PRIMARY KEY (ID_LIBRO),
			);
			
			
CREATE TABLE Tbl_RESERVA (
			ID_Alq TINYINT IDENTITY (1,1),
			ID_LECTOR TINYINT NOT NULL,
			ID_LIBRO TINYINT NOT NULL,
			FECHA_SALIDA DATETIME NOT NULL,
			FECHA_ENTRADA DATETIME NOT NULL,
			
			);			
			
			
CREATE TABLE Tbl_AUTOR(
			ID_Alq TINYINT IDENTITY (1,1),
			ID_LECTOR TINYINT NOT NULL,
			ID_LIBRO TINYINT NOT NULL,
			FECHA_SALIDA DATETIME NOT NULL,
			FECHA_ENTRADA DATETIME NOT NULL,
			
			);		
			
			
			
CREATE TABLE Tbl_CATEGORIA(
			ID_Alq TINYINT IDENTITY (1,1),
			ID_LECTOR TINYINT NOT NULL,
			ID_LIBRO TINYINT NOT NULL,
			FECHA_SALIDA DATETIME NOT NULL,
			FECHA_ENTRADA DATETIME NOT NULL,
			
			);	
			
			
			
CREATE TABLE Tbl_EDITORIAL(
			ID_EDI TINYINT IDENTITY (1,1),
			ID_LECTOR TINYINT NOT NULL,
			ID_LIBRO TINYINT NOT NULL,
			FECHA_SALIDA DATETIME NOT NULL,
			FECHA_ENTRADA DATETIME NOT NULL,
			
			);											
			
CREATE TABLE Tbl_LECTOR(
			COD_Empl INT IDENTITY (1,1),
			NOM_Empl VARCHAR (30) DEFAULT 'juliana',
			APELL_Empl VARCHAR(50) NOT NULL,
			DIR_Empl VARCHAR (50),
			TEL_Empl VARCHAR (7),
			SEX_Empl BIT,
			FECH_NAC_Empl DATETIME NOT NULL,
			SALARIO INT CHECK (SALARIO > 699999 AND SALARIO < 3000001),
			CONSTRAINT PK_COD_Empl PRIMARY KEY (COD_Empl),
			CONSTRAINT UQ_DIR_Empl UNIQUE (TEL_Empl)
			);
			
--LA SIGUIENTE INSTRUCCION MUESTRA LOS ESQUEMAS		
			
CREATE SCHEMA LIB;

--LA SIEUIENTE INSTRUCCION ASIGNA UNA TABLA A UN ESQUEMA

SELECT NAME FROM SYS.schemas;


ALTER SCHEMA dbo
TRANSFER LIB.Tbl_Empl;

--LA SIGUIENTE INSTRUCCION ELIMINA UN ESQUEMA

DROP SCHEMA LIB;

SELECT NAME FROM SYS.schemas;

--LA SIGUIENTE INSTRUCCION AGREGA UN CONSTRAIN A UNA TABLA YA EXISTENTE

ALTER TABLE TbL_Empl
ADD CONSTRAINT UQ_APELLIDO UNIQUE (APELL_Empl);


ALTER TABLE TbL_Empl
DROP CONSTRAINT UQ_APELLIDO;


--ADICIONA UN ATRIBUTO A UNA TABLA YA EXISTENTE

ALTER TABLE TbL_Empl
ADD CORREO VARCHAR (50);


--ELIMINA UNA COLUMNA

ALTER TABLE TbL_Empl
DROP COLUMN CORREO;

--CAMBIA EL TIPO DE DATO DE UN ATRIBUTO

ALTER TABLE TbL_Empl
ALTER COLUMN SEX_Empl VARCHAR;

SP_RENAME 'dbo.TbL_Empl.TEL_Empl', 'TELE_Empl';